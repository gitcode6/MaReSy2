@page "{id:int}"
@using Microsoft.AspNetCore.Authorization
@model MaReSy2.Pages.LagerverwaltungBearbeitenSETModel
@attribute [Authorize(Policy = "AdminsOnly")]
@{
    ViewData["Title"] = "SET bearbeiten";
}
<style>
    .btnSpeichern {
        color: white;
        background-color: #B70E0C;
    }

    .lagerverwaltung_lagerverwaltung {
        background-color: #403A60;
        padding-top: 10px;
        padding-bottom: 1px;
        text-align: center;
        font-family: Dunant;
    }

    .table_detail {
        padding: 2%;
        width: 100%;
        font-family: Dunant;
    }

    .form-group {
        margin: 20px;
    }

    .lagerverwaltung_bearbeitung {
        background-color: #99D6EA;
        padding: 20px;
        font-family: Dunant;
    }
</style>

<div class="lagerverwaltung_lagerverwaltung">
    <h1 style="color: white; font-size:50px;">Lager-Verwaltung</h1>
</div>
<br />

<div class="lagerverwaltung_bearbeitung">
    <h2 style="text-align: center;">SET Bearbeitung</h2>
    <form method="post">
        @*<div class="form-group">
        <input type="file" id="Produktbild" class="form-control" onchange="previewImage(event)" /> <!--   asp-for="Produkt.Produktbild" Bernd Stadlhofer: Image lässt sich nicht als Standard anzeigen -->
        <br>
        <img id="imagePreview" src="" alt="Bildvorschau" style="display:none; width:25%" />
        </div>*@
        <div class="form-group">
            <label for="Setname">Setname</label>
            <input type="text" name="setname" id="setname" class="form-control" asp-for="meinSet.setname">
        </div>
        <div class="form-group">
            <label for="Setbeschreibung">Beschreibung</label>
            <input type="text" name="setbeschreibung" id="setbeschreibung" class="form-control" asp-for="meinSet.setdescription">
        </div>
        <div class="form-group">
            <label for="Setstatus">Status</label>
            <select name="setstatus" id="setstatus" class="form-control" asp-for="meinSet.setactive">
                <option name="aktiv" value="true" selected>Aktiv</option>
                <option name="inaktiv" value="false">Inaktiv</option>
            </select>
        </div>
        <br />

        <!-- Produkte auswählen Tabelle -->
        <h2>Produkte auswählen</h2>
        <div class="table_detail">
            <table class="table">
                <thead>
                    <tr style="vertical-align: middle;">
                        <th>Filter</th>
                        <th><input type="text" id="filterBezeichnungAuswahl" placeholder="Bezeichnung" oninput="filterProdukteAuswaehlen()"></th>
                        <th><input type="text" id="filterBeschreibungAuswahl" placeholder="Beschreibung" oninput="filterProdukteAuswaehlen()"></th>
                        <th>
                            <select id="statusFilterAuswahl" onchange="filterProdukteAuswaehlen()">
                                <option value="">Alle</option>
                                <option value="Aktiv">Aktiv</option>
                                <option value="Inaktiv">Inaktiv</option>
                            </select>
                        </th>
                    </tr>
                    <tr style="vertical-align: middle;">
                        <th width="4%">ID</th>
                        <th width="21%">Bezeichnung</th>
                        <th width="40%">Beschreibung</th>
                        <th width="7%">Status</th>
                        <th width="24%">Tools</th>
                    </tr>
                </thead>
                <tbody id="userTableBodyAuswahl">
                    @if (Model.products != null && Model.products.Any())
                    {
                        @foreach (var e in Model.products)
                        {
                            <tr style="vertical-align: middle;">
                                <td>@e.productId</td>
                                <td>@e.productname</td>
                                <td>@e.productdescription</td>
                                <td>@(e.productactive ? "Aktiv" : "Inaktiv")</td>
                                <td>
                                    <a class="btn btn-primary" style="background-color: #A0DAB3; border: #A0DAB3;" onclick="produktHinzufuegen(this.closest('tr'));">Produkt hinzufügen</a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <br />

        <!-- Anzahl definieren Tabelle -->
        <h2>Anzahl definieren</h2>
        <div class="table_detail">
            <table class="table">
                <thead>
                    <tr style="vertical-align: middle;">
                        <th>Filter</th>
                        <th><input type="text" id="filterBezeichnungAnzahl" placeholder="Bezeichnung" oninput="filterAnzahlDefinieren()"></th>
                        <th><input type="text" id="filterBeschreibungAnzahl" placeholder="Beschreibung" oninput="filterAnzahlDefinieren()"></th>
                        <th></th>
                        <th></th>
                    </tr>
                    <tr style="vertical-align: middle;">
                        <th width="4%">ID</th>
                        <th width="21%">Bezeichnung</th>
                        <th width="40%">Beschreibung</th>
                        <th width="7%">Menge</th>
                        <th width="24%">Tools</th>
                    </tr>
                </thead>
                <tbody id="userTableBodyAnzahl">
                </tbody>
            </table>
        </div>

        <input type="hidden" id="anzahlDefinierenDaten" name="anzahlDefinierenDaten"/>

        <button type="submit" class="btn btnSpeichern" style="background-color: #403A60;" onclick="return speicherDaten()">Speichern</button>
        <a asp-page="/Lagerverwaltung" class="btn btn-secondary" style="background-color: #B70E0C;">Abbrechen</a>
    </form>
</div>

<script>
    function filterProdukteAuswaehlen() {
        const filterBezeichnung = document.getElementById("filterBezeichnungAuswahl").value.toLowerCase();
        const filterBeschreibung = document.getElementById("filterBeschreibungAuswahl").value.toLowerCase();
        const filterStatus = document.getElementById("statusFilterAuswahl").value;

        const rows = document.querySelectorAll("#userTableBodyAuswahl tr");

        rows.forEach(row => {
            const bezeichnung = row.cells[1].textContent.toLowerCase();
            const beschreibung = row.cells[2].textContent.toLowerCase();
            const status = row.cells[3].textContent;

            const matchBezeichnung = !filterBezeichnung || bezeichnung.includes(filterBezeichnung);
            const matchBeschreibung = !filterBeschreibung || beschreibung.includes(filterBeschreibung);
            const matchStatus = !filterStatus || status === filterStatus;

            row.style.display = matchBezeichnung && matchBeschreibung && matchStatus ? "" : "none";
        });
    }

    function filterAnzahlDefinieren() {
        const filterBezeichnung = document.getElementById("filterBezeichnungAnzahl").value.toLowerCase();
        const filterBeschreibung = document.getElementById("filterBeschreibungAnzahl").value.toLowerCase();

        const rows = document.querySelectorAll("#userTableBodyAnzahl tr");

        rows.forEach(row => {
            const bezeichnung = row.cells[1].textContent.toLowerCase();
            const beschreibung = row.cells[2].textContent.toLowerCase();

            const matchBezeichnung = !filterBezeichnung || bezeichnung.includes(filterBezeichnung);
            const matchBeschreibung = !filterBeschreibung || beschreibung.includes(filterBeschreibung);

            row.style.display = matchBezeichnung && matchBeschreibung ? "" : "none";
        });
    }

    function previewImage(event) {
        const file = event.target.files[0]; // Die ausgewählte Datei
        const reader = new FileReader();

        reader.onload = function () {
            const imagePreview = document.getElementById('imagePreview');
            imagePreview.src = reader.result; // Setze die Quelle des Bildes auf das gelesene Ergebnis
            imagePreview.style.display = 'block'; // Zeige das Bild an
        }

        if (file) {
            reader.readAsDataURL(file); // Lese die Datei als Data-URL
        }
    }

    function produktHinzufuegen(row) {
        // Zeilen-Daten aus der Tabelle "Produkte auswählen" extrahieren
        const productId = row.cells[0].innerText;
        const productName = row.cells[1].innerText;
        const productDescription = row.cells[2].innerText;

        // Prüfen, ob das Produkt schon in der unteren Tabelle existiert
        const anzahlTable = document.getElementById("userTableBodyAnzahl");
        const existingRow = Array.from(anzahlTable.rows).find(r => r.cells[0].innerText === productId);

        if (existingRow) {
            alert("Das Produkt ist bereits in der unteren Tabelle!");
            return;
        }

        // Neue Zeile für die Tabelle "Anzahl definieren" erstellen
        const newRow = anzahlTable.insertRow();

        newRow.innerHTML = `
                        <td>${productId}</td>
                        <td>${productName}</td>
                        <td>${productDescription}</td>
                        <td><input type="text" placeholder="Menge" class="form-control"></td>
                        <td>
                            <a class="btn btn-primary" style="background-color: #B70E0C; border: #B70E0C;" onclick="produktEntfernen(this)">Produkt entfernen</a>
                        </td>
                    `;
    }

    function produktEntfernen(button) {
        // Zeile aus der Tabelle entfernen
        const row = button.closest('tr');
        row.remove();
    }

    function speicherDaten() {
        const tableBody = document.getElementById("userTableBodyAnzahl");
        const rows = Array.from(tableBody.rows);

        // Serialisiere die Daten aus der unteren Tabelle
        const tableData = rows.map(row => ({
            productId: row.cells[0].innerText.trim(),
            productAmount: row.cells[3].querySelector("input").value.trim()
        }));

        // Speichere die Daten in das versteckte Eingabefeld
        const hiddenInput = document.getElementById("anzahlDefinierenDaten");
        hiddenInput.value = JSON.stringify(tableData);

        // Optionale Validierung: Stelle sicher, dass alle Mengen eingegeben wurden
        const invalidRow = tableData.find(row => !row.productAmount || isNaN(row.productAmount));
        if (invalidRow) {
            alert("Bitte alle Mengen korrekt eingeben!");
            return false; // Verhindert das Absenden des Formulars
        }

        return true; // Formular wird abgesendet
    }

</script>
